{"version":3,"sources":["components/addcategorycomponent.js","components/gifgriditem.js","helpers/getImages.js","components/gifgridcomponent.js","hooks/useFetchGif.js","components/gifexpertcomponent.js","index.js"],"names":["AddCategoryComponent","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getImages","category","a","encodeURI","fetch","resp","json","data","gifs","map","gif","images","downsized_medium","GifGridComponent","loading","state","setstate","useEffect","then","useFetchGif","image","key","GifExpertComponent","categories","ReactDOM","render","document","getElementById"],"mappings":"uLAGaA,EAAuB,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEjBC,mBAAS,IAFQ,mBAE9CC,EAF8C,KAElCC,EAFkC,KAgBrD,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAd1B,SAACP,GACjBF,EAAcE,EAAEQ,OAAOF,UAcnB,4BAAQD,KAAK,UAAb,eCpBCI,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACpC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNHK,EAAS,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACfN,EADe,iDACiCO,UAAUF,GAD3C,+DAEFG,MAAMR,GAFJ,cAEfS,EAFe,gBAGAA,EAAKC,OAHL,uBAGdC,EAHc,EAGdA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAKc,EAAIC,OAAOC,iBAAiBhB,QARpB,kBAWdY,GAXc,4CAAH,sDCITK,EAAmB,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDrB,SAACA,GAAc,IAAD,EACXrB,mBAAS,CAAC2B,KAAK,GAAIO,SAAQ,IADhB,mBAC9BC,EAD8B,KACvBC,EADuB,KAYrC,OATAC,qBAAU,WACNjB,EAAUC,GAAUiB,MAAK,SAAAP,GACrBK,EAAS,CACLT,KAAMI,EACNG,SAAS,SAGlB,CAACb,IAEGc,EDVwBI,CAAYlB,GAApCa,EADqC,EACrCA,QAAcH,EADuB,EAC5BJ,KAEhB,OACI,6BACI,4BAAKN,GAED,yBAAKJ,UAAU,aAEXiB,GAAW,yCAGXH,EAAOF,KAAI,SAAAW,GACP,OAAO,kBAAC,EAAD,eAAaC,IAAKD,EAAM1B,IAAQ0B,UEblDE,EAAqB,WAAO,IAAD,EAEA1C,mBAAS,CAAC,WAFV,mBAE7B2C,EAF6B,KAEjB5C,EAFiB,KAUpC,OACI,6BACI,4CACA,kBAAC,EAAD,CAAsBA,cAAeA,IACrC,6BACA,4BAEQ4C,EAAWd,KAAI,SAAAR,GACX,OAAO,kBAAC,EAAD,CAAkBoB,IAAKpB,EAAUA,SAAUA,UCjB1EuB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.57b7777b.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategoryComponent = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInput = (e) => {\n        setInputValue(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories(cate => [inputValue, ...cate]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={inputValue} onChange={handleInput}></input>\n            <button type=\"submit\">AÃ±adir</button>\n        </form>\n    )\n}\n\nAddCategoryComponent.propTypes = {\n    setCategories: PropTypes.func.isRequired\n};","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}></img>\n            <p>{title}</p>\n        </div>\n    )\n}\n","export const getImages = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=OI4FYrIRzCEJAt368ynVhOztElnCMsIY`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    const gifs = data.map(gif => {\n        return {\n            id: gif.id,\n            title: gif.title,\n            url: gif.images.downsized_medium.url\n        };\n    }); \n    return gifs;\n};","import React from 'react'\nimport { GifGridItem } from './gifgriditem';\nimport { useFetchGif } from '../hooks/useFetchGif';\n\nexport const GifGridComponent = ({category}) => {\n    const {loading, data:images} = useFetchGif(category);\n\n    return (\n        <div>\n            <h3>{category}</h3>\n            {\n                <div className=\"card-grid\">\n                {\n                    loading && <p>Loading...</p>\n                }\n                {\n                    images.map(image => {\n                        return <GifGridItem key={image.id} {...image}/>\n                    })\n                }\n            </div>\n            }\n        </div>\n    );\n}\n","import { useState, useEffect } from \"react\"\nimport { getImages } from \"../helpers/getImages\";\n\nexport const useFetchGif = (category) => {\n    const [state, setstate] = useState({data:[], loading:true});\n\n    useEffect(() => {\n        getImages(category).then(images => {\n            setstate({\n                data: images,\n                loading: false\n            });\n        });\n    }, [category]);\n\n    return state;\n}\n","import React, { useState } from 'react';\nimport { AddCategoryComponent } from './addcategorycomponent';\nimport { GifGridComponent } from './gifgridcomponent';\n\nexport const GifExpertComponent = () => {\n\n    const [categories, setCategories] = useState(['Naruto']);\n    \n    // const handleAdd = () => {\n    //     setCategories(categories.concat('Dragon Ball Z'));\n    //     // setCategories(...categories, 'Dragon Ball Z');\n    //     // setCategories(cate => [...cate, 'Dragon Ball Z']);\n    // };\n\n    return (\n        <div>\n            <h2>GifExpertApp</h2>\n            <AddCategoryComponent setCategories={setCategories}/>\n            <hr></hr>\n            <ul>\n                {\n                    categories.map(category => {\n                        return <GifGridComponent key={category} category={category}/>\n                    })\n                }\n            </ul>\n        </div>\n    );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertComponent} from './components/gifexpertcomponent';\n\nReactDOM.render(\n  <GifExpertComponent/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}